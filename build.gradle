plugins {
    id 'java'
    //id 'org.springframework.boot' version '3.0.0'
    id 'maven-publish'
    id 'jacoco'
}

apply plugin: 'java'
apply plugin: 'jacoco'
//apply plugin: 'org.springframework.boot'

group 'com.trecapps.auth'
version buildVersion

ext {
    springbootVersion = '3.2.4'
}

repositories {
    mavenCentral()
}

jar{
    archiveClassifier=''
    enabled = true
}

targetCompatibility = 17
sourceCompatibility = 17

dependencies {
    implementation 'org.projectlombok:lombok:1.18.24'
    testImplementation 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'jakarta.activation:jakarta.activation-api:2.1.0'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.0'

    implementation "org.springframework.boot:spring-boot-starter:$springbootVersion"

    implementation 'org.hibernate:hibernate-core:6.1.6.Final'
    implementation 'org.hibernate:hibernate-entitymanager:5.6.14.Final'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    implementation 'mysql:mysql-connector-java:+' // mySQL

    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'


    // This is needed so that multiple DataSources can be supported on Java 11
    implementation 'org.javassist:javassist:3.23.1-GA'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.0-jre'

    implementation "org.springframework.boot:spring-boot-starter-security:$springbootVersion"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springbootVersion"

    implementation 'com.azure:azure-storage-blob:+'             // Use Azure for Storage
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.694'     // Use AWS for storage



    implementation "io.projectreactor.netty:reactor-netty-core:+"
    implementation "io.projectreactor.netty:reactor-netty-http:+"

    // Use JWT for token generation and verification
    implementation 'com.auth0:java-jwt:+'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.66'
    implementation "com.azure.spring:spring-cloud-azure-starter-keyvault:5.11.0" // Getting secret info from Azure Key Vault
    implementation 'com.amazonaws:aws-java-sdk-secretsmanager:1.11.355'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.1.1'
}


test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacoco {
    toolVersion = '0.8.11'
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}



jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}



publishing {

    publications {
        myPublication(MavenPublication) {
            groupId group
            artifactId 'TrecAuth'
            version buildVersion
            artifact 'build/libs/'.concat(artifactId).concat('-').concat(buildVersion).concat('.jar')
        }
    }

    repositories{
        maven {
            url azureRepoUrl
            name 'tcMavenRepo'
            credentials {
                username azureRepoUsername
                password azureRepoPassword
            }
        }
    }
}